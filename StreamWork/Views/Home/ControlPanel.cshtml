@model StreamWork.ViewModels.ControlPanelViewModel;

@{
    ViewData["Title"] = "Control Panel";
}

<style>
    table tr th {
        border: 1px solid black;
    }
</style>

<script>
    function makeTutor(user) {
        alert('test');
        $.ajax({
            url: '/Home/MakeTutor',
            type: 'post',
            dataType: 'json',
            data: {
                'username': user
            },
            success: function (data) {
                if (data.message === 'Success') {
                    $('#' + user + '-username').text('REFRESH');
                    $('#' + user + '-name').text('REFRESH');
                    $('#' + user + '-emailAddress').text('REFRESH');
                    $('#' + user + '-accepted').text('REFRESH');
                    $('#' + user + '-makeTutor').remove();
                    $('#' + user + '-makeStudent').remove();
                    $('#' + user + '-makeSuspended').remove();
                }
                else {
                    alert('Error');
                }
            }
        });
    }

    function makeStudent(user) {
        $.ajax({
            url: '/Home/MakeStudent',
            type: 'post',
            dataType: 'json',
            data: {
                'username': user
            },
            success: function (data) {
                if (data.message === 'Success') {
                    $('#' + user + '-username').text('REFRESH');
                    $('#' + user + '-name').text('REFRESH');
                    $('#' + user + '-emailAddress').text('REFRESH');
                    $('#' + user + '-payPalAddress').text('REFRESH');
                    $('#' + user + '-accepted').text('REFRESH');
                    $('#' + user + '-balance').text('RFERESH');
                    $('#' + user + '-accept').remove();
                    $('#' + user + '-setZero').remove();
                    $('#' + user + '-makeTutor').remove();
                    $('#' + user + '-makeStudent').remove();
                    $('#' + user + '-makeSuspended').remove();
                }
                else {
                    alert('Error');
                }
            }
        });
    }

    function makeSuspended(user) {
        $.ajax({
            url: '/Home/MakeSuspended',
            type: 'post',
            dataType: 'json',
            data: {
                'username': user
            },
            success: function (data) {
                if (data.message === 'Success') {
                    $('#' + user + '-username').text('REFRESH');
                    $('#' + user + '-name').text('REFRESH');
                    $('#' + user + '-emailAddress').text('REFRESH');
                    $('#' + user + '-payPalAddress').text('REFRESH');
                    $('#' + user + '-accepted').text('REFRESH');
                    $('#' + user + '-balance').text('RFERESH');
                    $('#' + user + '-accept').remove();
                    $('#' + user + '-setZero').remove();
                    $('#' + user + '-makeTutor').remove();
                    $('#' + user + '-makeStudent').remove();
                    $('#' + user + '-makeSuspended').remove();
                }
                else {
                    alert('Error');
                }
            }
        });
    }

    function setZero(user) {
        $.ajax({
            url: '/Home/ZeroTutorBalance',
            type: 'post',
            dataType: 'json',
            data: {
                'username': user
            },
            success: function (data) {
                if (data.message === 'Success') {
                    $('#' + user + '-balance').text('REFRESH');
                    $('#' + user + '-setZero').remove();
                }
                else {
                    alert('Error');
                }
            }
        });
    }

    function test() {
        $.ajax({
            url: '/Home/Test',
            type: 'post',
            dataType: 'json',
            success: function () {
                if (data.message === 'Success') {
                    alert('Success');
                }
                else {
                    alert('Error');
                }
            }
        });
    }
</script>

<p>@DateTime.UtcNow.ToShortDateString() @DateTime.UtcNow.ToLongTimeString().</p>
<p>Welcome, admin. Please note that the actions available on this page are live and cannot be easily undone.</p>
<p>Tutors</p>
<table>
    <tr>
        <th>Username</th>
        <th>Name</th>
        <th>Email Address</th>
        <th>PayPal</th>
        <th>Approved</th>
        <th>Amount Due</th>
        <th>Actions</th>
    </tr>
    @foreach (StreamWork.DataModels.UserLogin user in Model.Tutors)
    {
        <tr>
            <th>
                <div id="@user.Username-username">@user.Username</div>
            </th>
            <th>
                <div id="@user.Username-name">@user.Name</div>
            </th>
            <th>
                <div id="@user.Username-emailAddress">@user.EmailAddress</div>
            </th>
            <th>
                <div id="@user.Username-payPalAddress">@user.PayPalAddress</div>
            </th>
            <th>
                @if (user.AcceptedTutor)
                {
                    <div id="@user.Username-accepted">True</div>
                }
                else
                {
                    <div id="@user.Username-accepted">False</div>
                }
            </th>
            <th>
                <div id="@user.Username-balance">@user.Balance</div>
            </th>
            <th>
                @if (!user.AcceptedTutor)
                {
                    <button id="@user.Username-accept" onclick="accept('@user.Username');">Approve</button>
                }
                <button id="@user.Username-makeStudent" onclick="makeStudent('@user.Username');">Demote To Student</button>
                <button id="@user.Username-makeSuspended" onclick="makeSuspended('@user.Username');">Suspend</button>
                @if (user.Balance != 0)
                {
                    <button id="@user.Username-setZero" onclick="setZero('@user.Username');">Set Amount Due to Zero</button>
                }
            </th>
        </tr>
    }
</table>

<br />
<p>Students</p>
<table>
    <tr>
        <th>Username</th>
        <th>Name</th>
        <th>Email Address</th>
        <th>Actions</th>
    </tr>
    @foreach (StreamWork.DataModels.UserLogin user in Model.Students)
    {
        <tr>
            <th>
                <div id="@user.Username-username">@user.Username</div>
            </th>
            <th>
                <div id="@user.Username-name">@user.Name</div>
            </th>
            <th>
                <div id="@user.Username-emailAddress">@user.EmailAddress</div>
            </th>
            <th>
                <button id="@user.Username-makeTutor" onclick="makeTutor('@user.Username');">Promote to Tutor</button>
                <button id="@user.Username-makeSuspended" onclick="makeSuspended('@user.Username');">Suspend</button>
            </th>
        </tr>
    }
</table>

<br />
<p>Suspended Accounts</p>
<table>
    <tr>
        <th>Username</th>
        <th>Name</th>
        <th>Email Address</th>
        <th>Approved Tutor</th>
        <th>Actions</th>
    </tr>
    @foreach (StreamWork.DataModels.UserLogin user in Model.Suspendeds)
    {
        <tr>
            <th>
                <div id="@user.Username-username">@user.Username</div>
            </th>
            <th>
                <div id="@user.Username-name">@user.Name</div>
            </th>
            <th>
                <div id="@user.Username-emailAddress">@user.EmailAddress</div>
            </th>
            <th>
                @if (user.AcceptedTutor)
                {
                    <div id="@user.Username-accepted">True</div>
                }
                else
                {
                    <div id="@user.Username-accepted">False</div>
                }
            </th>
            <th>
                <button id="@user.Username-makeTutor" onclick="maketutor('@user.Username');">Promote to Tutor</button>
                <button id="@user.Username-makeStudent" onclick="makeStudent('@user.Username');">Promote to Student</button>
            </th>
        </tr>
    }
</table>

<br />
<p>Donations</p>
<table>
    <tr>
        <th>Payer</th>
        <th>Tutor</th>
        <th>Value</th>
        <th>Time Sent</th>
        <th>Errors</th>
    </tr>
    @foreach (StreamWork.Models.Payment payment in Model.Payments)
    {
        <tr>
            <th>@payment.Student</th>
            <th>@payment.Tutor</th>
            <th>@payment.Val</th>
            <th>@payment.TimeSent.ToShortDateString() @payment.TimeSent.ToLongTimeString()</th>
            <th>@payment.Error</th>
        </tr>
    }
</table>

<br />
<button onclick="test()">Do Not Press</button>