@model StreamWork.ViewModels.ProfileTutorViewModel

@{Layout = "_LayoutTutorNavbar";}
@{ViewData["Title"] = "ProfileTutor";}

<script src="~/js/Tutor.js"></script>
<script src="~/js/EditProfile.js"></script>
<link rel="stylesheet" href="~/css/Tutor.css" />

<div class="container-fluid" style="max-width:2400px">
    <div class="card text-center border-0" style="color:white;">
        <div class="card-body" style="background:linear-gradient(to bottom, white 25%, #008080 0%);">
            <div class="col-12">
                <input type="image" class="zoom" onclick="EditProfile()" src=@Model.UserProfile.ProfilePicture style="width:115px; height: 150px; border-radius:5%" />
                <h1 class="card-title mt-4" style="font-size:24px; color:whitesmoke;font-family: 'Roboto Slab', serif;"><b>@Model.UserProfile.Name.Replace('|', ' ')</b></h1>
                <p class="card-text" id="ProfileCaptionGreeting" style="font-size:16px; color:white">Welcome to StreamWork!</p>
                <p class="card-text" id="ProfileParagraphGreeting" style="font-size:14px; color:white">StreamWork is very excited to have you onboard our amazing community of StreamTutors. If you haven't been verified yet feel free to edit your profile, explore other StreamTutors, or watch some livestreams.  We promise that your verification will be done soon and we can't wait for you to start streaming your tutoring sessions to our student viewers. Happy streaming!</p>
                <p class="card-text" id="ProfileCaptionOnPage" style="font-size:16px; color:white">@Model.UserProfile.ProfileCaption</p>
                <p class="card-text" id="ProfileParagraphOnPage" style="font-size:14px; color:white">@Model.UserProfile.ProfileParagraph</p>
            </div>
        </div>
    </div>
    <div class="row text-center" style="background-color:#008080;">
        <div class="col-lg-3 pr-0">
            <div class="card-body" style="background-color:#008080; border-bottom-left-radius:5px; height: 110px;">
                <h5 style="color:whitesmoke">Streams</h5>
                <h4 style="color:white">@Model.NumberOfStreams</h4>
            </div>
        </div>
        <div class="col-lg-3 p-0">
            <div class="card-body" style="background-color:#008080;border-top-left-radius:0px; height: 110px;">
                <h5 style="color:whitesmoke">Donations</h5>
                <h4 style="color:white">$0</h4>
            </div>
        </div>
        <div class="col-lg-3 p-0">
            <div class="card-body" style="background-color:#008080; border-bottom-right-radius:0px; height: 110px;">
                <h5 style="color:whitesmoke">Followers</h5>
                <h4 style="color:white">@Model.NumberOfFollowers</h4>
            </div>
        </div>
        <div class="col-lg-3 pl-0">
            <div class="card-body" style="background-color:#008080; border-bottom-right-radius:5px; height: 110px;">
                <button class="uploadbtn" style="display:block; margin-left:auto; margin-right:auto; border-radius:5px; cursor:pointer" onclick="OpenViewRecommendationsModal()">View Recommendations</button>
            </div>
        </div>
    </div>
</div>

<br />
<br />

<div class="container-fluid" style="max-width:2400px">
    <div class="row">
        <div class="col-12">
            <div class="card" style="background-color:whitesmoke">
                <br />
                <h2 class="text-center" ; style="color:black; font-family: 'Roboto Slab', serif;"><b>Stream Schedule</b><span> <img id="info" src="~/images/info_icon.png" style="width: 24px; height: 24px; margin-top: -5px;" data-toggle="tooltip" data-placement="right" title="The stream schedule is used for scheduling streams in advance. Every time you add or edit a stream your student followers will get a notification so that they can tune in at the appropriate time. " /></span></h2>
                <hr />
                <br />
                <button class="uploadbtn" style="display:block; margin-left:auto; margin-right:auto; border-radius:5px; cursor:pointer" onclick="OpenAddScheduleModal()">Add Stream<span><img width="20" class="mb-1 ml-1" src="~/images/Plus48.png" /></span></button>
                <div class="row">
                    @foreach (var day in Model.Schedule)
                    {
                        <div class="col-lg-3 col-md-6 text-center mt-5 mb-5">
                            <h1 class="mt-2" style="font-size:20px; color:black"><b>@day.DayOfWeek.DayOfWeek</b></h1>
                            <h6 style="color:black">@day.DayOfWeek.ToShortDateString()</h6>
                            <div class="list-group ml-3">
                                @foreach (var task in day.StreamTaskList)
                                {
                                    <button class="list-group-item ml-3 mr-3 zoom" style="cursor:pointer; border-color:#008080" onclick="OpenEditScheduleModal('@task.Name', '@task.TimeOfDay', '@day.DayOfWeek.ToShortDateString()')"><b>@task.Name</b> <br /> @task.TimeOfDay</button>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<br />
<br />

<div class="container" style="width:100%;">
    <h2 class="text-center" style="font-family:'Roboto Slab', serif"><b>My Streams</b><span> <img id="info2" src="~/images/info_icon.png" style="width: 24px; height: 24px; margin-top: -5px;" data-toggle="tooltip" data-placement="right" title="Your previous streams will be displayed here after you are finished streaming them." /></span></h2>
    <div class="row">
        @if (Model.UserArchivedVideos.Count != 0)
        {
            @foreach (var videoInfo in Model.UserArchivedVideos)
            {
                <div class="col-lg-4 col-md-6 col-sm-12 streamsubject @videoInfo.StreamSubject">
                    <div class="card mt-3" style="border-radius:5%; border:none; max-width:375px">
                        <input type="image" width="100%" height="210" style="border-top-left-radius:5%; border-top-right-radius:5%; min-width:250px" src=@videoInfo.StreamThumbnail onclick="window.location.href='../StreamViews/StreamPlaybackPage?streamId=@videoInfo.StreamID'">
                        <div class="card-body p-0" style="background-color:#008080 ;border-bottom-left-radius:5%; height:75px; border-bottom-right-radius:5%; border:none; min-width:250px" onclick="window.location.href='/Home/ProfileView?Tutor=' + ('@videoInfo.Username');">
                            <div class="row">
                                <div class="col-2 pr-2">
                                    <input type="image" style="border-radius:5%; width:50px; margin-left:10px; margin-top:10px; height:60px;" src=@videoInfo.ProfilePicture />
                                </div>
                                <div class="col-10" style="color:white;">
                                    <h5 class="text-truncate" style="font-family: 'Roboto'; font-size:20px; margin-left:20px; margin-top:10px;">@videoInfo.StreamTitle</h5>
                                    <h6 class="text-truncate" style="font-family: 'Roboto'; font-size:14px;margin-left:20px;">@videoInfo.Username</h6>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-lg-4"></div>
            <div class="col-lg-4">
                <h6 class="text-center" style="color:black">No Streams Yet!</h6>
            </div>
        }
        <br />
    </div>
</div>

<div id="viewRecommendationsModal" class="modal" tabindex="-2" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="background-color: #008080;">
            <div class="modal-header">
                <h5 class="modal-title" style="color: white;">View Recommendations</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (Model.Recommendations.Count == 0)
                {
                    <h4 style="color: white;">There are no recommendations available at this time.</h4>
                }
                else
                {
                    for (int i = 0; i < Model.Recommendations.Count; i++)
                    {
                        <div id="recommendation-@i" class="card my-2">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-8">
                                        <h5 class="card-title">@Model.Recommendations[i].Student</h5>
                                        <p class="card-text">@Model.Recommendations[i].Text</p>
                                    </div>
                                    <div class="col-4">
                                        <button class="btn" style="width: 100%; height: 50px; background-color: #008080; color: white;" onclick="ClearRecommendation(@i, '@Model.Recommendations[i].Id')">Clear</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="modal-footer">
                <button type="button" style="background-color: black; color: white;" class="btn" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>$(document).ready(function () {
        $("#nav").click(function () {
            $("#navbarText").slideToggle();
        });
    });</script>

@if (Model.UserProfile.ProfileCaption == null && Model.UserProfile.ProfileParagraph == null && Model.UserProfile.AcceptedTutor == false)
{
    <script>WriteTutorGreeting()</script>
}
else
{
    <script>WriteTutorGreeting1()</script>
}

<script>$("#info").tooltip();
    $("#info2").tooltip()</script>