<link rel="stylesheet" href="~/mathquill/mathquill.css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.3/signalr.min.js"></script>
<script src='https://kit.fontawesome.com/a076d05399.js'></script>
<script src="~/mathquill/mathquill.js"></script>
<script>var MQ = MathQuill.getInterface(2);</script>
<script src="~/js/chat.js" asp-append-version="true"></script>

@model StreamWork.ViewModels.StreamPageViewModel
@{ ViewData["Title"] = "StreamPage";}

<link rel="stylesheet" href="~/css/Streams.css" />

<script>$(document).ready(function () {
        StartConnectionToServerStudent();
    })</script>


<div class="container-fluid" style="background-color:white; height:100%">
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-9 p-0">
            <iframe style="height:85vh; width:100%" class="p-0" src="https://c.streamhoster.com/embed/media/WxsdDM/mAe0epZsixC/@Model.UserChannel.ChannelKey.Split('|')[0]" frameborder="0" scrolling="no" allow="autoplay" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>
            <div class="row">
                <div class="col-12">
                    <div class="m-3">
                        <h2 class="mt-1" style="color:black; font-family:'Roboto Slab', serif;">@Model.UserChannel.StreamTitle<span></span></h2>
                        <a href="/Home/ProfileView?tutor=@Model.UserChannel.Username"><b>by @Model.TutorUserProfile.Name.Replace('|', ' ')</b></a>
                        <p class="mt-2">@Model.UserChannel.StreamDescription</p>
                    </div>

                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-12 col-lg-3 p-1">
            @if (Model.GenericUserProfile != null)
            {
                @if (Model.IsUserFollowingThisTutor == false && Model.GenericUserProfile != null && Model.GenericUserProfile.Username != Model.TutorUserProfile.Username)
                {
                    <button id="FollowButton" type="button" style="width:100%; font-family:'Roboto Slab', serif;" class="streamWorkSecondary mb-2" onclick="FollowStreamTutor('@Model.TutorUserProfile.Id')">Follow</button>
                    <button id="UnfollowButton" type="button" style="width:100%; display:none; font-family:'Roboto Slab', serif;" class="streamWorkGrey mb-2" onclick="UnfollowStreamTutor('@Model.TutorUserProfile.Id')">Unfollow</button>
                }
                else if (Model.IsUserFollowingThisTutor == true && Model.GenericUserProfile != null && Model.GenericUserProfile.ProfileType == "student")
                {
                    <button id="FollowButton" type="button" style="width:100%; display:none;font-family:'Roboto Slab', serif;" class="streamWorkSecondary mb-2" onclick="FollowStreamTutor('@Model.TutorUserProfile.Id')">Follow</button>
                    <button id="UnfollowButton" type="button" style="width:100%; font-family:'Roboto Slab', serif;" class="streamWorkGrey mb-2" onclick="UnfollowStreamTutor('@Model.TutorUserProfile.Id')">Unfollow</button>
                }
            }
            @if (!Model.TutorUserProfile.Name.Equals("Scott|Underwood"))
            {
                <button class="streamWorkGold mb-2 mr-1" style="font-family:'Roboto Slab', serif; cursor: pointer; width:100%;" onclick="window.open('https://www.streamwork.live/Home/Donate?tutor=@Model.UserChannel.Username')">Donate</button>
            }
            <button class="streamWorkSecondary" style="font-family:'Roboto Slab', serif; cursor: pointer; width:100%;" onclick="showSubmitRecommendationModal();">Recommendation</button>


            <div id="questionBox">
                <div class="card mt-3" style=" background-color:whitesmoke">
                    <div class="card-title text-center m-2" style="font-family:'Roboto Slab', serif; font-size:22px ">Send Question</div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-10 col-md-11 col-sm-10 col-10">
                                <input id="regularQuestions" class="form-control" placeholder="Ask a question" />
                                <div>
                                    <p><span style="display:none" id="equationQuestions" class="form-control"></span></p>
                                    <p style="display:none"><span id="latex"></span></p>
                                    <script>var mathFieldSpan = document.getElementById('equationQuestions');
                                        var latexSpan = document.getElementById('latex');
                                        var MQ = MathQuill.getInterface(2); // for backcompat
                                        var mathField = MQ.MathField(mathFieldSpan, {
                                            spaceBehavesLikeTab: true, // configurable
                                            handlers: {
                                                edit: function () { // useful event handlers
                                                    latexSpan.textContent = mathField.latex(); // simple API
                                                }
                                            }
                                        });</script>
                                </div>
                            </div>
                            <div class="col-lg-2 col-md-1 col-sm-2 col-2">
                                <i class='fas fa-calculator' onclick="SwitchInputs()" style='font-size:32px;color:#008080;cursor:pointer'></i>
                            </div>

                            <button type="button" id="sendQuestionButton" class="streamWorkPrimary mt-3" style="display:block; margin-left:auto; margin-right:auto;" onclick="SendMessageToTutor('@Model.GenericUserProfile.Name', '@Model.UserChannel.Id')">Send Question</button>
                        </div>
                    </div>
                </div>
            </div>
            <!--
         <iframe class="p-0" src=@Model.ChatBox style="width:100%; height:45vh;" allowtransparency="yes" allow="autoplay" frameborder="0" marginheigh="0" marginwidth="0" scrolling="auto"></iframe>
    -->

        </div>
    </div>
</div>

<div id="submitRecommendationModal" class="modal" tabindex="-2" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="background-color: whitesmoke;">
            <div class="modal-header">
                <h5 class="modal-title" style="color: black;">Submit a Recommendation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <textarea align="middle" class="form-control" id="submitRecommendationText" style="height:200px;" placeholder="Recommendation"></textarea>
                </form>
            </div>
            <div class="modal-footer">
                <button class="streamWorkGrey" data-dismiss="modal">Exit</button>
                @if (Model.GenericUserProfile == null)
                {
                    <button class="streamWorkPrimary" data-dismiss="modal" onclick="submitRecommendation('Anonymous', '@Model.UserChannel.Username')">Submit</button>
                }
                else
                {
                    <button class="streamWorkPrimary" data-dismiss="modal" onclick="submitRecommendation('@Model.GenericUserProfile.Username', '@Model.UserChannel.Username')">Submit</button>
                }
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#nav").click(function () {
            $("#navbarText").slideToggle();
        });
    });</script>