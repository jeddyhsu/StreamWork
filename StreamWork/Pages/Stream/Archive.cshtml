@page "{tutor}/{id}"
@model StreamWork.Pages.Stream.Archive
@{Layout = "Tutor/_LayoutTutor"; }
@{ViewData["Title"] = "StreamPlaybackPage";}
@{var cacheRand = new Random().Next();}

<div class="container-fluid">
    <div class="row" style="padding-top:58px">
        <div class="d-flex flex-column col-lg-8 col-md-12 col-sm-12 col-12 p-0 border-right ">
            <div class="card border-0">
                <div id="tutor-info" class="border-top pt-3 pl-3 pr-3 pb-1" style="background-color:#FBFBFB">
                    <div class="d-lg-inline-block d-md-inline-block d-sm-none d-none float-right mr-3">
                        @if (Model.FollowValue.Equals("Following"))
                        {<button id="Following" onclick="Unfollow('@Model.UserProfile.Id', '@Model.UserProfile.Id')" class="streamWork-primary m-1">Following</button>}
                        else if (Model.FollowValue.Equals("Follow"))
                        {<button id="Follow" onclick="Follow('@Model.UserProfile.Id', '@Model.UserProfile.Id')" class="streamWork-primary m-1">Follow</button>}
                        <button class="streamWork-orange m-1">Donate</button>
                        <button class="streamWork-secondary m-1" onclick="window.location.href='/Profile/Tutor/@Model.TutorUserProfile.Username'">Tutor Profile</button>
                        <button class="streamWork-secondary m-1" onclick="window.location.href='/Profile/Tutor/@Model.TutorUserProfile.Username'">Message</button>
                    </div>
                    <input align="left" type="image" class="rounded" style="width:30px" src=@Model.TutorUserProfile.ProfilePicture />
                    <h3 class="mb-0 form-header" style="font-size:20px; margin-left:40px; color:@Model.UserChannel.ChatColor">@Model.TutorUserProfile.Name.Replace('|', ' ')</h3>
                    <p class="form-sub-header" style="margin-left:40px; font-size:14px">@Model.TutorUserProfile.ProfileCaption</p>
                    <div class="d-lg-none d-md-none d-sm-inline-block d-inline-block ml-1">
                        @if (Model.FollowValue.Equals("Following"))
                        {<button id="Following" onclick="Unfollow('@Model.UserProfile.Id', '@Model.UserProfile.Id')" class="streamWork-primary m-1">Following</button>}
                        else if (Model.FollowValue.Equals("Follow"))
                        {<button id="Follow" onclick="Follow('@Model.UserProfile.Id', '@Model.UserProfile.Id')" class="streamWork-primary m-1">Follow</button>}
                        <button class="streamWork-orange m-1">Donate</button>
                        <button class="streamWork-secondary m-1" onclick="window.location.href='/Profile/Tutor/@Model.TutorUserProfile.Username'">Tutor Profile</button>
                        <button class="streamWork-secondary m-1" onclick="window.location.href='/Profile/Tutor/@Model.TutorUserProfile.Username'">Message</button>
                    </div>
                </div>
                <iframe id="player" style="width:100%;" src="https://c.streamhoster.com/embed/media/WxsdDM/mAe0epZsixC/@Model.ArchivedStream.StreamID" frameborder="0" scrolling="no" allow="autoplay" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>
                <div id="player-row" class="card-body p-0">
                    <img class="pr-3" align="left" src="/images/ChatAssets/Math.png" style="width:100%; height:100%; max-width:120px; max-height:110px; cursor:pointer" onclick="window.open('https://www.streamwork.live/Home/Search?s=@Model.UserChannel.StreamSubject&q=')" />
                    <div class="m-3" id="StreamInfo">
                        <h3 style="color:black; font-family:'Roboto Slab', serif;">@Model.ArchivedStream.StreamTitle<span></span></h3>
                        <p class="mb-1" style="padding-left:105px">@Model.ArchivedStream.StreamDescription</p>
                        <p style="font-size:12px; padding-left:105px">Tutoring @Model.ArchivedStream.StreamSubject</p>
                    </div>
                </div>
                <div class="card-body" style="background-color:#FBFBFB">
                    <p class="form-header" style="font-size:18px"><b>Other Recent Streams</b></p>
                    <div class="row">
                        @foreach (var stream in Model.OtherArchivedStreams)
                        {
                            <div class="col-xl-3 col-lg-4 col-md-4 col-sm-6 col-12">
                                @await Html.PartialAsync("Partials/Stream/Stream_Appearance", stream)
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="d-flex flex-column fixed col-lg-4 col-md-12 col-sm-12 col-12 p-0 border-top-0">
            <iframe class="border-0" style="width:100%; height:100%" src="http://localhost:58539/chat/chat?chatId=@Model.UserChannel.Username&chatInfo=@Model.ChatInfo"></iframe>
        </div>
    </div>
</div>

<script>
    $(window).resize(function () {
        var height = $('#player-row').height();
        var tutorInfoHeight = $('#tutor-info').height();
        var offest = height + 58 + tutorInfoHeight + 21;
        $('#player').css('height', 'calc(100vh - ' + offest + 'px)')
        console.log("asdfsadasdf")
    })

    var height = $('#player-row').height();
    var tutorInfoHeight = $('#tutor-info').height();
    var offest = height + 58 + tutorInfoHeight + 21;
    $('#player').css('height', 'calc(100vh - ' + offest + 'px)')
    console.log("asdfsadasdf")
</script>